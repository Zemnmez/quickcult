# Add rules here to build your software
# See https://docs.bazel.build/versions/master/build-ref.html#BUILD_files

# Allow any ts_library rules in this workspace to reference the config
# Note: if you move the tsconfig.json file to a subdirectory, you can add an alias() here instead
#   so that ts_library rules still use it by default.
#   See https://www.npmjs.com/package/@bazel/typescript#installation

load("//:rules.bzl", "ts_config")
load("@npm//@bazel/buildifier:index.bzl", "buildifier_test")

package(default_visibility = [":__subpackages__"])

ts_config(
    name = "tsconfig",
    src = "tsconfig.json",
)

ts_config(
    name = "tsconfig_node",
    src = "node.tsconfig.json",
    deps = ["//typescript/config:node"],
)

ts_config(
    name = "tsconfig_jsx",
    src = "jsx.tsconfig.json",
    deps = ["//typescript/config:jsx"],
)

exports_files(
    [
        "jest.ts.config.js",
        ".prettierrc.json",
        ".gitignore",
        ".editorconfig",
        ".eslintrc.json",
    ],
    visibility = ["//visibility:public"],
)

build_files = glob([
    "**/BUILD",
    "**/*.bzl",
    "**/*.bazel",
])

print(build_files)

buildifier_test(
    name = "bzl_format",
    args = [
        "--lint",
        "warn",
    ] + build_files,
    data = build_files,
)
